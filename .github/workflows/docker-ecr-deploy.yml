name: "Docker build and push to ecr"
on:
  workflow_call:
    inputs:
      build-args:
        required: false
        type: string
      version-identifier:
        required: true
        type: string
      needs-intermediate-artifact:
        required: false
        default: false
        type: boolean
      repo-name:
        required: false
        default: ${{ github.event.repository.name }}
        type: string
    secrets:
      ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
jobs:
  dockerBuild-ECRpush:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ format('arn:aws:iam::{0}:role/GithubActionsECRAccess', secrets.ACCOUNT_ID) }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ format('{0}.dkr.ecr.{1}.amazonaws.com', secrets.ACCOUNT_ID, secrets.AWS_REGION) }}
      - name: Download jar artifact
        if: inputs.needs-intermediate-artifact == true
        with:
          name: output-jar
        uses: actions/download-artifact@v3
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          build-args: ${{ inputs.build-args }}
          tags: ${{ format('{0}.dkr.ecr.{1}.amazonaws.com/{2}:{3}', secrets.ACCOUNT_ID, secrets.AWS_REGION, inputs.repo-name, inputs.version-identifier) }}
      - name: Build and push
        if: github.ref_name == 'master'
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          build-args: ${{ inputs.build-args }}
          tags: |
            ${{ format('{0}.dkr.ecr.{1}.amazonaws.com/{2}:{3}', secrets.ACCOUNT_ID, secrets.AWS_REGION, inputs.repo-name, inputs.version-identifier) }}
            ${{ format('{0}.dkr.ecr.{1}.amazonaws.com/{2}:latest', secrets.ACCOUNT_ID, secrets.AWS_REGION, inputs.repo-name) }}
