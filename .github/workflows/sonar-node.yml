name: "Sonar-node-s3"
on:
  workflow_call:
    inputs:
      version-identifier:
        required: true
        type: string
      test-arguments:
        required: false
        type: string
      node-version:
        required: false
        default: 14
        type: string
      lint:
        required: false
        default: false
        type: boolean
      zip-artifact-path:
        required: false
        type: string
      s3-bucket:
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true
jobs:
  sonar-node-s3:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          NEXUS_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Lint
        if: inputs.lint == true
        run: npm run lint
      - name: Test
        env:
          ARGS: ${{ inputs.test-arguments }}
        run: npm run test $ARGS
      - name: Build artifacts
        if: inputs.zip-artifact-path != ''
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ${{ inputs.zip-artifact-path }} .
      - name: Configure AWS Credentials
        if: inputs.s3-bucket != '' && github.ref_name == 'master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ format('arn:aws:iam::{0}:role/GithubActionsS3Access', secrets.ACCOUNT_ID) }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Push artifacts to s3
        if: inputs.s3-bucket != '' && github.ref_name == 'master'
        env:
          VERSION_IDENTIFIER: ${{ inputs.version-identifier }}
        run: aws s3 cp ${{ inputs.zip-artifact-path }} ${{ inputs.s3-bucket }}/$VERSION_IDENTIFIER/${{ inputs.zip-artifact-path }}
